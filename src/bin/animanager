#!/usr/bin/env python3

import logging
import atexit
import argparse

from animanager import db
from animanager import locator
from animanager import scene
from animanager.scene import menu


def main():

    # parse arguments
    parser = argparse.ArgumentParser(
        description='Anime Manager MySQL frontend.')
    parser.add_argument('--loglevel', action='store', default='warn')
    parser.add_argument('--logfile', action='store', default='')
    parser.add_argument('--logfilter', action='store', default='')
    args = parser.parse_args()

    # setup logging
    logger = logging.getLogger()
    if args.logfile:
        handler = logging.FileHandler(args.logfile)
    else:
        handler = logging.StreamHandler()
    logger.addHandler(handler)
    handler.setFormatter(logging.Formatter(
        '%(asctime)s %(levelname)s @%(name)s %(message)s'))
    try:
        a = getattr(logging, args.loglevel.upper())
    except AttributeError:
        raise ValueError('Invalid log level: {!s}'.format(args.loglevel))
    else:
        logger.setLevel(a)
    if args.logfilter:
        handler.addFilter(logging.Filter(args.logfilter))

    locator.db = db.AnimeDB()
    atexit.register(locator.db.close)

    locator.stack = scene.SceneStack()
    locator.stack.add((menu.main_menu, [], {}))

    locator.stack.run()

if __name__ == "__main__":
    main()
